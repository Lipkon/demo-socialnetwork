{"version":3,"sources":["components/Profile/My Posts/MyPosts.module.css","components/Navbar/Navbar.module.css","redux/messages-reducer.js","hoc/WithAuthRedirect.js","components/common/Paginator/Paginator.module.css","assets/images/Infinity.svg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My Posts/Post/Post.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/friends-reducer.js","hoc/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Friends/Friend/Friend.jsx","components/Friends/Friends.jsx","components/Navbar/Navbar.jsx","components/Settings/Settings.jsx","components/Musik/Music.jsx","components/News/News.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My Posts/Post/Post.jsx","components/Profile/My Posts/MyPosts.jsx","components/Profile/My Posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/InputForModal.js","components/Header/LoginModal.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","hoc/withSuspense.js","index.js","utils/validators/validator.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/Friends/Friends.module.css","components/Friends/Friend/Friend.module.css"],"names":["module","exports","sendMessage","newMessageText","type","initialState","messages","id","message","dialogs","name","messageReducer","state","action","withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","auth","Boolean","window","location","hostname","match","instance","axios","baseURL","userAPI","getUsers","countUsers","numberPage","get","params","count","page","then","responce","data","authUser","login","secret","console","warn","authAPI","logoutUser","signInUser","unfollowUser","delete","followUser","post","getProfile","userId","profileAPI","user","getUserStatus","status","updateUserStatus","textStatus","put","profile","posts","likeCount","isFetching","setProfileUser","setStatusUser","toggleIsFetching","profileReducer","newPostMessage","filter","p","idPost","friends","friendsReducer","updateObjectInArray","items","itemId","objectPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPageNumber","followingInProgress","follow","unfollow","toggleIsFollowing","usersReducer","followed","currentPage","totalCount","email","setAuthUserData","authentificateUser","username","authorizationUserThunkCreator","dispatch","a","res","resultcode","_id","stopSubmit","_error","loginUserThunkCreator","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","messagePage","friendsPage","usersPage","form","formReducer","appR","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Friend","className","s","friendBlock","avatarImage","src","Friends","friend","friendsBlock","friendsArea","Navbar","nav","item","active","activeClassName","activeLink","Settings","Music","News","Paginator","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","leftPortionPageNumber","rightPortionPageNumber","onClick","selectedPage","User","isFollowing","onClickFollowUser","key","avatar","disabled","some","e","country","city","Users","Preloader","preLoader","width","height","getPageSize","getTotalUsersCount","getCurrentPageNumber","getIsFetching","getFollowingInProgress","getIsAuth","getUsersSuper","createSelector","UsersAPIComponent","onFollowUnfollow","isNewFollow","pageNumber","clearUsers","UsersContainer","apiMethod","bind","actionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","photos","small","inProgress","descriptionBlock","aboutMe","Post","Message","LikeCount","MyPosts","memo","postsElements","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostBody","maxLength70","maxLengthCreator","reduxForm","handleSubmit","Field","component","TextArea","placeholder","validate","requiredField","MyPostsContainer","Profile","ProfileContainer","UserId","getStatus","withRouter","InputForModal","caption","setCaption","target","LoginModal","show","handleShow","Button","variant","Modal","onHide","Header","closeButton","Title","Body","updateUsernameText","updateSecretText","Footer","setShow","header","HeaderContainer","maxLength15","LoginReduxForm","error","Input","formSummaryError","Login","loginUser","LoginContainer","DialogsContainer","lazy","App","initializeApp","initializedApp","path","render","Suspense","fallback","AppContainer","promise","Promise","all","MainApp","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","length","FormControl","input","meta","child","element","hasError","touched","formControl","children","restProps"],"mappings":"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","file":"static/js/main.fc8b01ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2nw-8\",\"postsBlock\":\"MyPosts_postsBlock__25b-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3uvkX\",\"item\":\"Navbar_item__uEtsb\",\"activeLink\":\"Navbar_activeLink__1Kc3W\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport const sendMessage = (newMessageText) => ({type: SEND_MESSAGE, newMessageText});\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Will you superman?'},\r\n        {id: 3, message: 'I think so yes'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Proffessor'},\r\n        {id: 2, name: 'Denver'},\r\n        {id: 3, name: 'Helsinki'},\r\n        {id: 4, name: 'Tokio'}\r\n    ]\r\n}\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            /*let stateCopy = Object.assign({}, state);*/\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 7, message: action.newMessageText}]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messageReducer;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Redirect from \"react-router-dom/Redirect\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    };\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Paginator_avatar__3lW46\",\"selectedPage\":\"Paginator_selectedPage__3zCFu\"};","module.exports = __webpack_public_path__ + \"static/media/Infinity.5422ce1e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__NtPF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__gDYNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1gZ0N\",\"loginBlock\":\"Header_loginBlock__QzNCA\",\"language-jsx\":\"Header_language-jsx__rsUqS\",\"keyword\":\"Header_keyword__2Logn\",\"function\":\"Header_function__3mp_G\",\"operator\":\"Header_operator__2om8o\",\"punctuation\":\"Header_punctuation__1MO8s\",\"tag\":\"Header_tag__2i2Wr\",\"comment\":\"Header_comment__3l6f0\",\"parameter\":\"Header_parameter__3ap0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileStatus_descriptionBlock__3oBLO\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: '/apiv1/'\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(countUsers, numberPage) {\r\n        return instance.get('users', {\r\n            params: {\r\n                count: countUsers,\r\n                page: numberPage\r\n            }\r\n        }).then(responce => {\r\n            return responce.data;\r\n        });\r\n    },\r\n\r\n    authUser(login, secret) {\r\n        console.warn('Obsolete method. Please, use authAPI object.');\r\n        return authAPI.authUser(login, secret);\r\n    },\r\n\r\n    logoutUser() {\r\n        console.warn('Obsolete method. Please, use authAPI object.');\r\n        return authAPI.logoutUser();\r\n    },\r\n\r\n    signInUser() {\r\n        console.warn('Obsolete method. Please, use authAPI object.');\r\n        return authAPI.signInUser();\r\n    },\r\n\r\n    unfollowUser(id) {\r\n        return instance.delete(\"follow?id=\" + id)\r\n            .then(responce => {\r\n                return responce.data;\r\n            });\r\n    },\r\n\r\n    followUser(id) {\r\n        return instance.post(\"follow\", {\"id\": id})\r\n            .then(responce => {\r\n                return responce.data;\r\n            });\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please, use profileAPI object.');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(\"profile\", {\r\n            params: {\r\n                id: userId\r\n            }\r\n        })\r\n            .then(responce => {\r\n                return responce.data.user;\r\n            });\r\n    },\r\n\r\n    getUserStatus(userId) {\r\n        return instance.get(\"status\", {\r\n            params: {\r\n                id: userId\r\n            }\r\n        })\r\n            .then(responce => {\r\n                return responce.data.user.status;\r\n            });\r\n    },\r\n\r\n    updateUserStatus(textStatus) {\r\n        return instance.put(\"status\", {\r\n            status: textStatus\r\n        })\r\n            .then(responce => {\r\n                return responce.data.user.status;\r\n            });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authUser(login, secret) {\r\n        return instance.post('login', {\r\n            \"username\": login,\r\n            \"password\": secret\r\n        }).then(responce => {\r\n            return responce.data;\r\n        });\r\n    },\r\n\r\n    logoutUser() {\r\n        return instance.post('logout')\r\n            .then(responce => {\r\n                return responce.data;\r\n            });\r\n    },\r\n\r\n    signInUser() {\r\n        return instance.get(\"auth\")\r\n            .then(responce => {\r\n                return responce.data;\r\n            });\r\n    }\r\n}","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_PROFILE_USER = 'SET_PROFILE_USER';\r\nconst SET_STATUS_USER = 'SET_STATUS_USER';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    posts: [\r\n        {id: 1, message: 'My first post', likeCount: 99},\r\n        {id: 2, message: 'I can use a props', likeCount: 999},\r\n        {id: 3, message: 'I will super web full stack dev!', likeCount: 9999},\r\n        {id: 4, message: 'I want will be super web full stack dev!', likeCount: 99999}\r\n    ],\r\n    isFetching: false,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, message: action.newPostMessage, likeCount: 1}]\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.idPost)\r\n            }\r\n        }\r\n        case SET_PROFILE_USER: {\r\n            return {\r\n                ...state, profile: action.data\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case SET_STATUS_USER: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setProfileUser = (data) => ({type: SET_PROFILE_USER, data});\r\nexport const setStatusUser = (status) => ({type: SET_STATUS_USER, status});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const addPost = (newPostMessage) => ({type: ADD_POST, newPostMessage});\r\nexport const deletePost = (idPost) => ({type: DELETE_POST, idPost});\r\n\r\n//Thunks\r\n\r\n//Set profile\r\nexport const getProfileThunkCreator = (userId) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let res = await profileAPI.getProfile(userId)\r\n    dispatch(setProfileUser(res));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\n//Get user status\r\nexport const getUserStatusThunkCreator = (userId) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let res = await profileAPI.getUserStatus(userId)\r\n    dispatch(setStatusUser(res));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\n//Update user status\r\nexport const updateUserStatusThunkCreator = (textStatus) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let res = await profileAPI.updateUserStatus(textStatus);\r\n    dispatch(setStatusUser(res));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport default profileReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Professor'},\r\n        {id: 1, name: 'Denver'},\r\n        {id: 1, name: 'Helsinki'},\r\n        {id: 1, name: 'Tokio'}\r\n    ]\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default friendsReducer;","export const updateObjectInArray = (items, itemId, objectPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objectPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    });\r\n}","import {userAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../hoc/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst CLEAR_USERS = 'CLEAR_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT_USERS = 'SET_TOTAL_COUNT_USERS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 2,\r\n    totalUsersCount: 0,\r\n    currentPageNumber: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"_id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"_id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case CLEAR_USERS: {\r\n            return {...state, users: []}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPageNumber: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT_USERS: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const clearUsers = () => ({type: CLEAR_USERS});\r\nexport const setTotalCountUsers = (totalCount) => ({type: SET_TOTAL_COUNT_USERS, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowing = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\n//Thunk creators\r\n\r\n//Get user\r\nexport const getUsersThunkCreator = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(pageNumber));\r\n    let res = await userAPI.getUsers(pageSize, pageNumber);\r\n    dispatch(setUsers(res.users));\r\n    dispatch(setTotalCountUsers(res.count));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\n//Follow / Unfollow\r\nexport const followThunkCreator = (userId, isNewFollow) => async (dispatch) => {\r\n    dispatch(toggleIsFollowing(true, userId));\r\n    let apiMethod = isNewFollow ? userAPI.followUser.bind(userAPI) : userAPI.unfollowUser.bind(userAPI);\r\n    let actionCreator = isNewFollow ? follow : unfollow;\r\n    let res = await apiMethod(userId);\r\n    if (res.resultcode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFollowing(false, userId));\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {setProfileUser} from \"./profile-reducer\";\r\nimport React from \"react\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst UPDATE_LOGIN_TEXT = 'UPDATE_LOGIN_TEXT';\r\nconst UPDATE_SECRET_TEXT = 'UPDATE_SECRET_TEXT';\r\nconst AUTHENTIFICATE_USER = 'AUTHENTICATE_USER';\r\nconst LOGOUT_USER = 'LOGOUT_USER';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    secret: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                userId: action.user._id,\r\n                login: action.user.username,\r\n                email: action.user.email,\r\n                isAuth: true\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case UPDATE_LOGIN_TEXT: {\r\n            return {...state, login: action.login}\r\n        }\r\n        case UPDATE_SECRET_TEXT: {\r\n            return {...state, secret: action.secret}\r\n        }\r\n        case AUTHENTIFICATE_USER: {\r\n            return {\r\n                ...state,\r\n                login: action.username,\r\n                email: action.email,\r\n                userId: action.id,\r\n                secret: null,\r\n                isAuth: true\r\n            }\r\n        }\r\n        case LOGOUT_USER: {\r\n            return {...state, login: null, email: null, secret: null, isAuth: false}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (user) => ({type: SET_AUTH_USER_DATA, user});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const updateUsernameText = (login) => ({type: UPDATE_LOGIN_TEXT, login: login});\r\nexport const updateSecretText = (secret) => ({type: UPDATE_SECRET_TEXT, secret: secret});\r\nexport const authentificateUser = (username, email, id) => ({type: AUTHENTIFICATE_USER, username, email, id});\r\nexport const logoutUser = () => ({type: LOGOUT_USER});\r\n\r\n//Thunks\r\n\r\n//Auth user\r\nexport const authorizationUserThunkCreator = (isAuth, login, secret) => async (dispatch) => {\r\n    if (isAuth) {\r\n        let resOut = await authAPI.logoutUser();\r\n        dispatch(logoutUser());\r\n    } else {\r\n        let res = await authAPI.authUser(login, secret);\r\n        if (res.resultcode === 0) {\r\n            dispatch(authentificateUser(res.user.username, res.user.email, res.user._id));\r\n        } else {\r\n            dispatch(stopSubmit(\"loginUser\", {_error: res.message}));\r\n        }\r\n    }\r\n}\r\n\r\n//Login user\r\nexport const loginUserThunkCreator = () => async (dispatch) => {\r\n    let responce = await authAPI.signInUser();\r\n    if (responce.resultcode === 0) {\r\n        dispatch(setAuthUserData(responce.user));\r\n        dispatch(setProfileUser(responce.user));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport {loginUserThunkCreator} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCES = 'INITIALIZED_SUCCES';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCES: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => ({type: INITIALIZED_SUCCES});\r\n\r\n//Thunk\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(loginUserThunkCreator())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(setInitialized());\r\n            });\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport messageReducer from \"./messages-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagePage: messageReducer,\r\n    friendsPage: friendsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    appR: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react'\r\nimport s from './Friend.module.css'\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div className={s.friendBlock}>\r\n            <img className={s.avatarImage} src='https://c7.hotpng.com/preview/774/258/429/crystal-ball.jpg'/>\r\n            <h6>{props.name}</h6>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friend;","import React from 'react'\r\nimport s from './Friends.module.css'\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = (props) => {\r\n    let friends = props.friendsPage.friends.map(friend => <Friend name={friend.name}/>)\r\n\r\n    return (\r\n        <div className={s.friendsBlock}>\r\n            <h4>Friends</h4>\r\n            <div className={s.friendsArea}>\r\n                {friends}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friends;","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"../Friends/Friends\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/Profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/Dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/News\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/Music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/Users\" activeClassName={s.activeLink}>Find users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/Settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <Friends friendsPage={props.friendsPage}/>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = ()=> { return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n);}\r\n\r\nexport default Settings;","import React from 'react'\r\nimport s from './Musik.module.css'\r\n\r\nconst Music = ()=> { return(\r\n        <div>\r\n            Musik\r\n        </div>\r\n);}\r\n\r\nexport default Music;","import React from 'react'\r\nimport s from './News.module.css'\r\n\r\nconst News = ()=> { return(\r\n        <div>\r\n            News\r\n        </div>\r\n);}\r\n\r\nexport default News;","import React, {useState} from 'react'\r\nimport s from './/Paginator.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//Paginator\r\nconst Paginator = ({totalUsersCount, pageSize, currentPageNumber, onPageChanged, portionSize = 2, ...props}) => {\r\n    let pageCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    /*let portionCount = Math.ceil(pageCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;*/\r\n\r\n    let leftPortionPageNumber = currentPageNumber === portionSize ? 0 : currentPageNumber - portionSize;\r\n    let rightPortionPageNumber = currentPageNumber === (pageCount - portionSize) ? pageCount : currentPageNumber + portionSize;\r\n\r\n    return <div>\r\n\r\n        {/*{portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}*/}\r\n\r\n        {pages\r\n            .filter((p) => {\r\n                return p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n            })\r\n            .map(p => {\r\n                return <button onClick={() => {\r\n                    onPageChanged(p)\r\n                }}\r\n                               className={currentPageNumber == p ? s.selectedPage : ''}>\r\n                    {p}</button>\r\n            })}\r\n\r\n        {/*{portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>NEXT</button>}*/}\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//Simple user viewer component\r\nconst User = ({user, isFollowing, onClickFollowUser, auth, ...props}) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div key={user._id}>\r\n                        <span>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + user._id}>\r\n                                <img src='https://miro.medium.com/max/720/1*W35QUSvGpcLuxPo3SRTH4w.png'\r\n                                     className={s.avatar}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            {auth ?\r\n                                <div>\r\n                                    {user.followed ?\r\n                                        <button disabled={isFollowing.some(id => id == user._id) ? true : false}\r\n                                                onClick={(e) => {\r\n                                                    onClickFollowUser(user._id, false);\r\n                                                }}>Unfollow</button>\r\n                                        : <button disabled={isFollowing.some(id => id == user._id) ? true : false}\r\n                                                  onClick={() => {\r\n                                                      onClickFollowUser(user._id, true);\r\n                                                  }}>Follow</button>}\r\n                                </div> : <div></div>}\r\n                                    </span>\r\n                <span>\r\n                                    <span>\r\n                                    <div>{user.name}</div>\r\n                                    <div>{user.status}</div>\r\n                                    </span>\r\n                                    <span>\r\n                                    <div>{user.location.country}</div>\r\n                                    <div>{user.location.city}</div>\r\n                                    </span>\r\n                                    </span>\r\n            </div>\r\n            )\r\n            }\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n//Simple user viewer component\r\nconst Users = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>{props.totalUsersCount}</div>\r\n            <Paginator totalUsersCount={props.totalUsersCount}\r\n                       pageSize={props.pageSize}\r\n                       currentPageNumber={props.currentPageNumber}\r\n                       onPageChanged={props.onPageChanged}/>\r\n            <div>\r\n                {\r\n                    props.users.map(\r\n                        u => <User user={u}\r\n                                   isFollowing={props.isFollowing}\r\n                                   onClickFollowUser={props.onClickFollowUser}\r\n                                   auth={props.auth}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import preLoader from \"../../../assets/images/Infinity.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div><img src={preLoader} width='75px' height='75px'/></div>;\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => state.usersPage.users;\r\nexport const getPageSize = (state) => state.usersPage.pageSize;\r\nexport const getTotalUsersCount = (state) => state.usersPage.totalUsersCount;\r\nexport const getCurrentPageNumber = (state) => state.usersPage.currentPageNumber;\r\nexport const getIsFetching = (state) => state.usersPage.isFetching;\r\nexport const getFollowingInProgress = (state) => state.usersPage.followingInProgress;\r\nexport const getIsAuth = (state) => state.auth.isAuth;\r\n\r\nexport const getUsersSuper = createSelector(getUsers, (users) => users.filter(u => true));","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearUsers,\r\n    follow, followThunkCreator,\r\n    getUsersThunkCreator,\r\n    toggleIsFetching,\r\n    toggleIsFollowing,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPageNumber, getFollowingInProgress, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSuper\r\n} from \"../../redux/users-selectors\";\r\n\r\n//API Container\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPageNumber, this.props.pageSize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearUsers();\r\n    }\r\n\r\n    onFollowUnfollow = (userId, isNewFollow) => {\r\n        this.props.followUser(userId, isNewFollow);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPageNumber={this.props.currentPageNumber}\r\n                   onPageChanged={this.onPageChanged}\r\n                   onClickFollowUser={this.onFollowUnfollow}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   users={this.props.users}\r\n                   auth={this.props.isAuth}\r\n                   isFollowing={this.props.followingInProgress}\r\n                   toggleIsFollowing={this.props.toggleIsFollowing}/>\r\n        </>;\r\n    }\r\n}\r\n\r\n//Container\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuper(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPageNumber: getCurrentPageNumber(state),\r\n        isFetching: getIsFetching(state),\r\n        isAuth: getIsAuth(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    clearUsers,\r\n    toggleIsFetching,\r\n    toggleIsFollowing,\r\n    getUsers: getUsersThunkCreator,\r\n    followUser: followThunkCreator\r\n})(UsersAPIComponent);\r\n\r\nexport default UsersContainer;","import React, {useEffect, useState} from 'react'\r\nimport s from './ProfileStatus.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return <div>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{status || 'Your status'}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>;\r\n    } else return (\r\n        <div>\r\n            {/*<div>\r\n                <img src={props.profile.photos.large}/>\r\n            </div>*/}\r\n            <img src={props.profile.photos.small}/>\r\n            <ProfileStatusWithHooks status={props.status}\r\n                           updateStatus={props.updateStatus}\r\n                           inProgress={props.inProgress}/>\r\n            <div className={s.descriptionBlock}>{props.profile.aboutMe}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://i.ytimg.com/vi/Y5GLCBjHR8U/maxresdefault.jpg' />\r\n      <div>{props.Message}</div>\r\n      <div>{props.LikeCount} likes</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength30, maxLengthCreator, requiredField} from \"../../../utils/validators/validator\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map(post => <Post Message={post.message} LikeCount={post.likeCount}/>)\r\n\r\n    let onSubmit = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength70 = maxLengthCreator(70);\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name={\"newPostBody\"}\r\n                   component={TextArea}\r\n                   placeholder={\"Enter your post...\"}\r\n                   validate={[requiredField, maxLength70]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'postsAddPostForm'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react'\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost: addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My Posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         inProgress={props.inProgress}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunkCreator,\r\n    getUserStatusThunkCreator,\r\n    updateUserStatusThunkCreator\r\n} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n//Container\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.UserId;\r\n        /*if(!userId && !this.props.isAuth){\r\n            this.props.history.push(\"/login\");\r\n        }*/\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     inProgress={this.props.inProgress}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isFetching: state.profilePage.isFetching,\r\n        posts: state.profilePage.posts,\r\n        status: state.profilePage.status,\r\n        inProgress: state.profilePage.isFetching,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getStatus: getUserStatusThunkCreator,\r\n    getProfile: getProfileThunkCreator,\r\n    updateStatus: updateUserStatusThunkCreator\r\n}), withRouter, withAuthRedirect)(ProfileContainer)","import React from 'react'\r\n\r\nconst InputForModal = (props) => {\r\n    const {caption, setCaption} = props;\r\n\r\n    const handleChange = (e) => {\r\n        setCaption(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <textarea value={caption}\r\n                      onChange={handleChange}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Input text\"/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default InputForModal","import React from \"react\";\r\nimport {Modal, Button} from \"react-bootstrap\";\r\nimport ModalInput from \"./InputForModal\";\r\n\r\nconst LoginModal = (props) => {\r\n    const {show, handleShow} = props;\r\n\r\n    let onClickSetAuthUser = () => {\r\n        props.auth.authUser(props.auth.isAuth, props.auth.login, props.auth.secret);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleShow} variant={\"primary\"}>\r\n                {props.auth.isAuth ? props.auth.login : 'Login'}\r\n            </Button>\r\n            <Modal show={show} onHide={handleShow}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{props.auth.isAuth ? 'Profile ' + props.auth.login : 'Sign in'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {!props.auth.isAuth ?\r\n                        <p>\r\n                            <ModalInput {...{caption: props.auth.login, setCaption: props.auth.updateUsernameText}}/>\r\n                            <ModalInput {...{caption: props.auth.secret, setCaption: props.auth.updateSecretText}} />\r\n                        </p> :\r\n                        <p>\r\n                            <div>{props.auth.login}</div>\r\n                            <div>{props.auth.email}</div>\r\n                        </p>}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {/*<Button variant=\"secondary\" onClick={handleShow}>\r\n                        Close\r\n                    </Button>*/}\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        onClickSetAuthUser();\r\n                        handleShow();\r\n                    }}>\r\n                        {props.auth.isAuth ? 'Sign out' : 'Sign in'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default LoginModal","import React, {useState} from 'react'\r\nimport s from './Header.module.css'\r\nimport Login from \"./LoginModal\";\r\nimport './bootstrap.min.css'\r\n\r\nfunction Header(props) {\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {\r\n        setShow(!show);\r\n    };\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <Login\r\n                auth={props.auth}\r\n                {...{show, handleShow}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    authentificateUser,\r\n    authorizationUserThunkCreator,\r\n    logoutUser,\r\n    setAuthUserData,\r\n    toggleIsFetching,\r\n    updateSecretText,\r\n    updateUsernameText\r\n} from \"../../redux/auth-reducer\";\r\nimport {setProfileUser} from \"../../redux/profile-reducer\";\r\n\r\n//API Component\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <Header auth={this.props}/>\r\n        </div>;\r\n    }\r\n}\r\n\r\n//Container with connect\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isFetching: state.auth.isFetching,\r\n        userId: state.auth.userId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n        secret: state.auth.secret\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    toggleIsFetching,\r\n    setAuthUserData,\r\n    updateUsernameText,\r\n    updateSecretText,\r\n    authentificateUser,\r\n    logoutUser,\r\n    setProfileUser,\r\n    authUser: authorizationUserThunkCreator\r\n})(HeaderContainer);","import React from 'react';\r\nimport Redirect from \"react-router-dom/Redirect\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validator\";\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst Login = ({isAuth, authUser, loginUser}) => {\r\n    loginUser();\r\n    if (isAuth) return <Redirect to='/Profile'/>\r\n\r\n    const onSubmit = (values) => {\r\n        authUser(isAuth, values.username, values.secret);\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field name={\"username\"} placeholder={\"Username\"} component={Input}\r\n                       validate={[requiredField, maxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"secret\"}\r\n                       placeholder={\"Password\"}\r\n                       type={\"password\"}\r\n                       component={Input}\r\n                       validate={[requiredField, maxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"rememberMe\"} type='checkbox' component={\"input\"}/> Rememder me\r\n            </div>\r\n            {error &&\r\n            <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'loginUser'\r\n})(LoginForm)\r\n\r\nexport default Login;","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {authorizationUserThunkCreator, loginUserThunkCreator} from \"../../redux/auth-reducer\";\r\nimport Login from \"./Login\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, {\r\n    authUser: authorizationUserThunkCreator,\r\n    loginUser: loginUserThunkCreator\r\n})(Login);\r\n\r\nexport default LoginContainer;","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter, BrowserRouter} from \"react-router-dom\";\nimport Settings from \"./components/Settings/Settings\";\nimport store from \"./redux/redux-store\"\nimport Music from \"./components/Musik/Music\";\nimport News from \"./components/News/News\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/LoginContainer\"\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initializedApp) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar friendsPage={this.props.friendsPage}/>\n                <div className='app-wrapper-content'>\n                    <Route path='/Dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/Profile/:UserId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/News' component={News}/>\n                    <Route path='/Music' component={Music}/>\n                    <Route path='/Users' render={() => <UsersContainer/>}/>\n                    <Route path='/Settings' component={Settings}/>\n                    <Route path='/Login' render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        initializedApp: state.appR.initialized,\n        friendsPage: state.friendsPage\n    }\n};\n\nlet AppContainer = compose(withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nlet MainApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default MainApp;","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    };\r\n}","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\"\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport MainApp from \"./App\";\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <MainApp />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState())\nstore.subscribe(() => rerenderEntireTree(store.getState()))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, element, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__DCdnB\",\"error\":\"FormsControls_error__3YZC-\",\"formSummaryError\":\"FormsControls_formSummaryError__hiGzG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__12Gsr\",\"selectedPage\":\"Users_selectedPage__3iNcb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsArea\":\"Friends_friendsArea__1l_96\",\"friendsBlock\":\"Friends_friendsBlock__1ssH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendBlock\":\"Friend_friendBlock__ja6Rn\",\"avatarImage\":\"Friend_avatarImage__20W-B\"};"],"sourceRoot":""}